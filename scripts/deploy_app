#!/usr/bin/env bash

echo "Deploying $CI_ENVIRONMENT_SLUG (track: $TRACK, replicas: $replicas) with $CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG..."


cat <<EOF | kubectl apply -n $KUBE_NAMESPACE --force -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $API_NAME
  labels:
    track: "$TRACK"
	app: "$APP_NAME"
    pipeline: "$PIPELINE_ID"
    build: "$BUILD"
    tier: api
spec:
  replicas: $replicas
  selector:
    matchLabels:
      tier: api
      track: "$TRACK"
  template:
    metadata:
      labels:
        name: $name
        track: "$TRACK"
        tier: api
    spec:
      imagePullSecrets:
      - name: gitlab-registry-pernament
      containers:
      - name: app
        image: "$CI_REGISTRY_IMAGE:$CI_IMAGE_VERSION"
        imagePullPolicy: Always
        env:
        - name: CI_BUILD_ID
          value: "$CI_BUILD_ID"
        - name: RAILS_SECRET_KEY
          value: "$DJANGO_SECRET_KEY"
        - name: RAILS_DEBUG 
          value: "False"
        - name: RAILS_ALLOWED_HOST
          value: "*"
        - name: RAILS_GCM_KEY
          value: "$GCM_KEY"
        - name: RAILS_CORS_ALLOW_ALL
          value: "True"
        - name: RAILS_CORS_WHITELIST
          value: ""
        - name: RAILS_DB_NAME
          value: "$MYSQL_DATABASE"
        - name: RAILS_DB_USER 
          value: "$MYSQL_USER"
        - name: RAILS_DB_PASS
          value: "$MYSQL_PASSWORD"
        - name: RAILS_DB_HOST
          value: "$mysql_name"
        - name: RAILS_DB_PORT
          value: "3306"
        - name: FCM_SERVER_KEY
          value: "$FCM_SERVER_KEY"
        ports:
        - name: api
          containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: $name
  namespace: $KUBE_NAMESPACE
  labels:
    track: $TRACK
    pipeline_id: "$CI_PIPELINE_ID"
    build_id: "$CI_BUILD_ID"
spec:
  type: NodePort
  ports:
    - name: api
      port: 80
      targetPort: api
  selector:
    track: $TRACK
    tier: api
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: $name-tls
  namespace: $KUBE_NAMESPACE
spec:
  secretName: $name-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: $URL
  dnsNames:
  - $URL
  acme:
    config:
    - http01:
        ingress: $name
      domains:
      - $URL
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $name
  namespace: $KUBE_NAMESPACE
  labels:
    track: $TRACK
    pipeline_id: "$CI_PIPELINE_ID"
    build_id: "$CI_BUILD_ID"
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "$IP_NAME"
spec:
  tls:
  - secretName: $name-tls
  rules:
  - host: $URL
    http:
      paths:
      - path: /*
        backend:
          serviceName: $name
          servicePort: 80
EOF

echo "Waiting for deployment..."
kubectl rollout status -n "$KUBE_NAMESPACE" -w "deployment/$name"


